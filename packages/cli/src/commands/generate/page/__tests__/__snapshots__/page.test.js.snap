// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Plural word files > creates a page component with a plural word for name 1`] = `
"// import { Link, routes } from '@redwoodjs/router'
import { Metadata } from '@redwoodjs/web'

const CatsPage = () => {
  return (
    <>
      <Metadata title="Cats" description="Cats page" />

      <h1>CatsPage</h1>
      <p>
        Find me in <code>./web/src/pages/CatsPage/CatsPage.jsx</code>
      </p>
      {/*
           My default route is named \`cats\`, link to me with:
           \`<Link to={routes.cats()}>Cats</Link>\`
        */}
    </>
  )
}

export default CatsPage
"
`;

exports[`Single world files > creates a page component 1`] = `
"// import { Link, routes } from '@redwoodjs/router'
import { Metadata } from '@redwoodjs/web'

const HomePage = () => {
  return (
    <>
      <Metadata title="Home" description="Home page" />

      <h1>HomePage</h1>
      <p>
        Find me in <code>./web/src/pages/HomePage/HomePage.jsx</code>
      </p>
      {/*
           My default route is named \`home\`, link to me with:
           \`<Link to={routes.home()}>Home</Link>\`
        */}
    </>
  )
}

export default HomePage
"
`;

exports[`Single world files > creates a page story 1`] = `
"import HomePage from './HomePage'

const meta = {
  component: HomePage,
}

export default meta

export const Primary = {}
"
`;

exports[`Single world files > creates a page test 1`] = `
"import { render } from '@redwoodjs/testing/web'

import HomePage from './HomePage'

//   Improve this test with help from the Redwood Testing Doc:
//   https://redwoodjs.com/docs/testing#testing-pages-layouts

describe('HomePage', () => {
  it('renders successfully', () => {
    expect(() => {
      render(<HomePage />)
    }).not.toThrow()
  })
})
"
`;

exports[`TS Files > TS Params 1`] = `
"// import { Link, routes } from '@redwoodjs/router'
import { Metadata } from '@redwoodjs/web'

type TsParamFilesPageProps = {
  id: string
}

const TsParamFilesPage = ({ id }: TsParamFilesPageProps) => {
  return (
    <>
      <Metadata title="TsParamFiles" description="TsParamFiles page" />

      <h1>TsParamFilesPage</h1>
      <p>
        Find me in{' '}
        <code>./web/src/pages/TSParamFilesPage/TSParamFilesPage.tsx</code>
      </p>
      <p>
        The parameter passed to me is <code>{id}</code>
      </p>
      {/*
          My default route is named \`tsParamFiles\`, link to me with:
          \`<Link to={routes.tsParamFiles({ id: '42' })}>TsParamFiles 42</Link>\`
      */}
    </>
  )
}

export default TsParamFilesPage
"
`;

exports[`TS Files > TS Params with type 1`] = `
"// import { Link, routes } from '@redwoodjs/router'
import { Metadata } from '@redwoodjs/web'

type TsParamTypeFilesPageProps = {
  id: number
}

const TsParamTypeFilesPage = ({ id }: TsParamTypeFilesPageProps) => {
  return (
    <>
      <Metadata title="TsParamTypeFiles" description="TsParamTypeFiles page" />

      <h1>TsParamTypeFilesPage</h1>
      <p>
        Find me in{' '}
        <code>
          ./web/src/pages/TSParamTypeFilesPage/TSParamTypeFilesPage.tsx
        </code>
      </p>
      <p>
        The parameter passed to me is <code>{id}</code>
      </p>
      {/*
          My default route is named \`tsParamTypeFiles\`, link to me with:
          \`<Link to={routes.tsParamTypeFiles({ id: 42 })}>TsParamTypeFiles 42</Link>\`
      */}
    </>
  )
}

export default TsParamTypeFilesPage
"
`;

exports[`TS Files > generates typescript pages 1`] = `
"// import { Link, routes } from '@redwoodjs/router'
import { Metadata } from '@redwoodjs/web'

const TsFilesPage = () => {
  return (
    <>
      <Metadata title="TsFiles" description="TsFiles page" />

      <h1>TsFilesPage</h1>
      <p>
        Find me in <code>./web/src/pages/TSFilesPage/TSFilesPage.tsx</code>
      </p>
      {/*
          My default route is named \`tsFiles\`, link to me with:
          \`<Link to={routes.tsFiles()}>TsFiles</Link>\`
      */}
    </>
  )
}

export default TsFilesPage
"
`;

exports[`TS Files > generates typescript pages 2`] = `
"import type { Meta, StoryObj } from '@storybook/react'

import TsFilesPage from './TsFilesPage'

const meta: Meta<typeof TsFilesPage> = {
  component: TsFilesPage,
}

export default meta

type Story = StoryObj<typeof TsFilesPage>

export const Primary: Story = {}
"
`;

exports[`TS Files > generates typescript pages 3`] = `
"import { render } from '@redwoodjs/testing/web'

import TsFilesPage from './TsFilesPage'

//   Improve this test with help from the Redwood Testing Doc:
//   https://redwoodjs.com/docs/testing#testing-pages-layouts

describe('TsFilesPage', () => {
  it('renders successfully', () => {
    expect(() => {
      render(<TsFilesPage />)
    }).not.toThrow()
  })
})
"
`;

exports[`handler > file generation 1`] = `
{
  "fileContent": "import HomePage from './HomePage'

const meta = {
  component: HomePage,
}

export default meta

export const Primary = {}
",
  "filePath": "/path/to/project/web/src/pages/HomePage/HomePage.stories.jsx",
}
`;

exports[`handler > file generation 2`] = `
{
  "fileContent": "import { render } from '@redwoodjs/testing/web'

import HomePage from './HomePage'

//   Improve this test with help from the Redwood Testing Doc:
//   https://redwoodjs.com/docs/testing#testing-pages-layouts

describe('HomePage', () => {
  it('renders successfully', () => {
    expect(() => {
      render(<HomePage />)
    }).not.toThrow()
  })
})
",
  "filePath": "/path/to/project/web/src/pages/HomePage/HomePage.test.jsx",
}
`;

exports[`handler > file generation 3`] = `
{
  "fileContent": "// import { Link, routes } from '@redwoodjs/router'
import { Metadata } from '@redwoodjs/web'

const HomePage = () => {
  return (
    <>
      <Metadata title="Home" description="Home page" />

      <h1>HomePage</h1>
      <p>
        Find me in <code>./web/src/pages/HomePage/HomePage.jsx</code>
      </p>
      {/*
           My default route is named \`home\`, link to me with:
           \`<Link to={routes.home()}>Home</Link>\`
        */}
    </>
  )
}

export default HomePage
",
  "filePath": "/path/to/project/web/src/pages/HomePage/HomePage.jsx",
}
`;

exports[`handler > file generation 4`] = `
{
  "fileContent": "import { Router, Route } from '@redwoodjs/router'

const Routes = () => {
  return (
    <Router>
      <Route path="/home" page={HomePage} name="home" />
      <Route path="/about" page={AboutPage} name="about" />
      <Route notfound page={NotFoundPage} />
    </Router>
  )
}

export default Routes",
  "filePath": "/path/to/project/web/src/Routes.js",
}
`;

exports[`handler > file generation with route params 1`] = `
{
  "fileContent": "import PostPage from './PostPage'

const meta = {
  component: PostPage,
}

export default meta

export const Primary = {}
",
  "filePath": "/path/to/project/web/src/pages/PostPage/PostPage.stories.jsx",
}
`;

exports[`handler > file generation with route params 2`] = `
{
  "fileContent": "import { render } from '@redwoodjs/testing/web'

import PostPage from './PostPage'

//   Improve this test with help from the Redwood Testing Doc:
//   https://redwoodjs.com/docs/testing#testing-pages-layouts

describe('PostPage', () => {
  it('renders successfully', () => {
    expect(() => {
      render(<PostPage id={'42'} />)
    }).not.toThrow()
  })
})
",
  "filePath": "/path/to/project/web/src/pages/PostPage/PostPage.test.jsx",
}
`;

exports[`handler > file generation with route params 3`] = `
{
  "fileContent": "// import { Link, routes } from '@redwoodjs/router'
import { Metadata } from '@redwoodjs/web'

const PostPage = ({ id }) => {
  return (
    <>
      <Metadata title="Post" description="Post page" />

      <h1>PostPage</h1>
      <p>
        Find me in <code>./web/src/pages/PostPage/PostPage.jsx</code>
      </p>
      <p>
        The parameter passed to me is <code>{id}</code>
      </p>
      {/*
           My default route is named \`post\`, link to me with:
           \`<Link to={routes.post({ id: '42' })}>Post 42</Link>\`
        */}
    </>
  )
}

export default PostPage
",
  "filePath": "/path/to/project/web/src/pages/PostPage/PostPage.jsx",
}
`;

exports[`handler > file generation with route params 4`] = `
{
  "fileContent": "import { Router, Route } from '@redwoodjs/router'

const Routes = () => {
  return (
    <Router>
      <Route path="/post/{id}" page={PostPage} name="post" />
      <Route path="/about" page={AboutPage} name="about" />
      <Route notfound page={NotFoundPage} />
    </Router>
  )
}

export default Routes",
  "filePath": "/path/to/project/web/src/Routes.js",
}
`;

exports[`multiWorldFiles > creates a page component 1`] = `
"// import { Link, routes } from '@redwoodjs/router'
import { Metadata } from '@redwoodjs/web'

const ContactUsPage = () => {
  return (
    <>
      <Metadata title="ContactUs" description="ContactUs page" />

      <h1>ContactUsPage</h1>
      <p>
        Find me in <code>./web/src/pages/ContactUsPage/ContactUsPage.jsx</code>
      </p>
      {/*
           My default route is named \`contactUs\`, link to me with:
           \`<Link to={routes.contactUs()}>ContactUs</Link>\`
        */}
    </>
  )
}

export default ContactUsPage
"
`;

exports[`multiWorldFiles > creates a page story 1`] = `
"import ContactUsPage from './ContactUsPage'

const meta = {
  component: ContactUsPage,
}

export default meta

export const Primary = {}
"
`;

exports[`multiWorldFiles > creates a test for a component with multiple words for a name 1`] = `
"import { render } from '@redwoodjs/testing/web'

import ContactUsPage from './ContactUsPage'

//   Improve this test with help from the Redwood Testing Doc:
//   https://redwoodjs.com/docs/testing#testing-pages-layouts

describe('ContactUsPage', () => {
  it('renders successfully', () => {
    expect(() => {
      render(<ContactUsPage />)
    }).not.toThrow()
  })
})
"
`;

exports[`paramFiles > creates a page component with params 1`] = `
"// import { Link, routes } from '@redwoodjs/router'
import { Metadata } from '@redwoodjs/web'

const PostPage = ({ id }) => {
  return (
    <>
      <Metadata title="Post" description="Post page" />

      <h1>PostPage</h1>
      <p>
        Find me in <code>./web/src/pages/PostPage/PostPage.jsx</code>
      </p>
      <p>
        The parameter passed to me is <code>{id}</code>
      </p>
      {/*
           My default route is named \`post\`, link to me with:
           \`<Link to={routes.post({ id: '42' })}>Post 42</Link>\`
        */}
    </>
  )
}

export default PostPage
"
`;

exports[`paramFiles > creates a test for page component with params 1`] = `
"import { render } from '@redwoodjs/testing/web'

import PostPage from './PostPage'

//   Improve this test with help from the Redwood Testing Doc:
//   https://redwoodjs.com/docs/testing#testing-pages-layouts

describe('PostPage', () => {
  it('renders successfully', () => {
    expect(() => {
      render(<PostPage id={'42'} />)
    }).not.toThrow()
  })
})
"
`;
